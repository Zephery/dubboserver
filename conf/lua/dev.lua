---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Zephery.
--- DateTime: 2018/2/11 17:16
---
local redis = require("resty.redis")
local cjson = require("cjson")
local cjson_encode = cjson.encode
local ngx_log = ngx.log
local ngx_ERR = ngx.ERR
local ngx_exit = ngx.exit
local ngx_print = ngx.print
local ngx_re_match = ngx.re.match
local ngx_var = ngx.var
local request_uri = ngx.var.request_uri

--关闭redis
local function close_redis(red)
    if not red then
        return
    end
    --释放连接(连接池实现)
    local pool_max_idle_time = 10000 --毫秒
    local pool_size = 100 --连接池大小
    local ok, err = red:set_keepalive(pool_max_idle_time, pool_size)

    if not ok then
        ngx_log(ngx_ERR, "set redis keepalive error : ", err)
    end
end

--从redis中获取
local function read_redis(key)
    local red = redis:new()
    red:set_timeout(1000)
    local ip = "119.23.46.71"
    local port = 6340
    red:connect(ip, port)
    local ok, err = red:auth("root")
    if not ok then
        ngx_log(ngx_ERR, "connect to redis error : ", err)
        return close_redis(red)
    end

    local resp, err = red:get(key)
    if not resp then
        ngx_log(ngx_ERR, "get redis content error : ", err)
        return close_redis(red)
    end
    --得到的数据为空处理
    if resp == ngx.null then
        resp = nil
    end
    close_redis(red)

    return resp
end

--回源到tomcat
local function read_http()
    local pagenum = ngx.req.get_uri_args()["pagenum"]
    ngx.req.set_header("Accept", "text/html,application/xhtml+xml,application/xml;")
    ngx.req.set_header("Accept-Encoding", "")
    local resp = ngx.location.capture("/index.do", { method = ngx.HTTP_GET, args = { pagenum = pagenum } })
    if not resp then
        ngx_log(ngx_ERR, "request error :", err)
        return
    end
    if resp.status ~= 200 then
        ngx_log(ngx_ERR, "request error, status :", resp.status)
        return
    end
    return resp.body
end

--主函数

--获取id
if (request_uri == "/" or request_uri == "/index.html") then
    --从redis获取
    local content = read_redis("index")
    --如果redis没有，回源到tomcat
    if not content then
        ngx_log(ngx_ERR, "redis not found content, back to http, id : ", id)
        content = read_http()
    end
    ngx_print(content)
    return
end
ngx.req.set_header("Accept", "text/html,application/xhtml+xml,application/xml;")
ngx.req.set_header("Accept-Encoding", "")
local resp = ngx.location.capture(request_uri)
if not resp then
    ngx_log(ngx_ERR, "request error :", err)
    return
end
if resp.status ~= 200 then
    ngx_log(ngx_ERR, "request error, status :", resp.status)
    return
end
ngx.print(resp.body)